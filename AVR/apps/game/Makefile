# File:   Makefile
# Author: M. P. Hayes, UCECE
# Date:   12 Sep 2010
# Descr:  Makefile for game
# Note:   You will need to add rules for any other modules you use

# Definitions.
CC = avr-gcc
CFLAGS = -mmcu=atmega32u2 -Os -Wall -Wstrict-prototypes -Wextra -g -I../../drivers -I../../fonts -I../../drivers/avr -I../../utils
OBJCOPY = avr-objcopy
SIZE = avr-size
DEL = rm


# Default target.
all: game.out


# Compile: create object files from C source files.
game.o: game.c player.h ball.h paddle.h game_object_display.h IR_comms.h crazy_pong.h  ../../drivers/avr/system.h ../../drivers/avr/ir_uart.h ../../drivers/navswitch.h ../../fonts/font3x5_1.h ../../utils/task.h ../../utils/tinygl.h  
	$(CC) -c $(CFLAGS) $< -o $@

pio.o: ../../drivers/avr/pio.c ../../drivers/avr/pio.h ../../drivers/avr/system.h
	$(CC) -c $(CFLAGS) $< -o $@

system.o: ../../drivers/avr/system.c ../../drivers/avr/system.h
	$(CC) -c $(CFLAGS) $< -o $@

timer.o: ../../drivers/avr/timer.c ../../drivers/avr/system.h ../../drivers/avr/timer.h
	$(CC) -c $(CFLAGS) $< -o $@

display.o: ../../drivers/display.c ../../drivers/avr/system.h ../../drivers/display.h ../../drivers/ledmat.h
	$(CC) -c $(CFLAGS) $< -o $@

ledmat.o: ../../drivers/ledmat.c ../../drivers/avr/pio.h ../../drivers/avr/system.h ../../drivers/ledmat.h
	$(CC) -c $(CFLAGS) $< -o $@

navswitch.o: ../../drivers/navswitch.c ../../drivers/avr/delay.h ../../drivers/avr/pio.h ../../drivers/avr/system.h ../../drivers/navswitch.h
	$(CC) -c $(CFLAGS) $< -o $@

font.o: ../../utils/font.c ../../drivers/avr/system.h ../../utils/font.h
	$(CC) -c $(CFLAGS) $< -o $@

task.o: ../../utils/task.c ../../drivers/avr/system.h ../../drivers/avr/timer.h ../../utils/task.h
	$(CC) -c $(CFLAGS) $< -o $@

tinygl.o: ../../utils/tinygl.c ../../drivers/avr/system.h ../../drivers/display.h ../../utils/font.h ../../utils/tinygl.h
	$(CC) -c $(CFLAGS) $< -o $@

boing.o:  ../../utils/boing.c ../../utils/boing.h ../../utils/tinygl.h
	$(CC) -c $(CFLAGS) $< -o $@
	
pacer.o:  ../../utils/pacer.c ../../utils/pacer.h ../../drivers/avr/system.h ../../drivers/avr/timer.h
	$(CC) -c $(CFLAGS) $< -o $@

ir_uart.o: ../../drivers/avr/ir_uart.c ../../drivers/avr/ir_uart.h ../../drivers/avr/system.h ../../drivers/avr/usart1.h ../../drivers/avr/timer0.h ../../drivers/avr/pio.h
	$(CC) -c $(CFLAGS) $< -o $@

usart1.o: ../../drivers/avr/usart1.c ../../drivers/avr/usart1.h ../../drivers/avr/system.h
	$(CC) -c $(CFLAGS) $< -o $@
	
timer0.o: ../../drivers/avr/timer0.c ../../drivers/avr/timer0.h ../../drivers/avr/system.h ../../drivers/avr/bits.h ../../drivers/avr/prescale.h
	$(CC) -c $(CFLAGS) $< -o $@	

prescale.o: ../../drivers/avr/prescale.c ../../drivers/avr/prescale.h ../../drivers/avr/system.h
	$(CC) -c $(CFLAGS) $< -o $@	

	
# added our modules here
paddle.o: paddle.c paddle.h game_object_display.h crazy_pong.h ../../drivers/avr/system.h ../../utils/tinygl.h
	$(CC) -c $(CFLAGS) $< -o $@
	
game_object_display.o: game_object_display.c game_object_display.h player.h ../../utils/tinygl.h paddle.h 
	$(CC) -c $(CFLAGS) $< -o $@
	
ball.o: ball.c ball.h game_object_display.h boundaries.h player.h paddle.h IR_comms.h crazy_pong.h ../../utils/boing.h ../../utils/tinygl.h ../../drivers/avr/system.h
	$(CC) -c $(CFLAGS) $< -o $@
	
boundaries.o: boundaries.c boundaries.h paddle.h ball.h crazy_pong.h ../../drivers/avr/system.h 
	$(CC) -c $(CFLAGS) $< -o $@

player.o: player.c player.h crazy_pong.h ../../drivers/avr/system.h
	$(CC) -c $(CFLAGS) $< -o $@	

IR_comms.o: IR_comms.c IR_comms.h ball.h player.h error_check.h crazy_pong.h ../../drivers/avr/ir_uart.h ../../drivers/avr/system.h ../../utils/tinygl.h ../../utils/boing.h
	$(CC) -c $(CFLAGS) $< -o $@	
	
error_check.o: error_check.c error_check.h ball.h IR_comms.h player.h crazy_pong.h ../../utils/boing.h ../../utils/tinygl.h ../../drivers/avr/system.h
	$(CC) -c $(CFLAGS) $< -o $@	

crazy_pong.o: crazy_pong.c crazy_pong.h ball.h paddle.h player.h game_object_display.h IR_comms.h ../../drivers/avr/system.h ../../utils/tinygl.h
	$(CC) -c $(CFLAGS) $< -o $@	

	
	
# Link: create ELF output file from object files.
game.out: game.o pio.o system.o timer.o display.o ledmat.o navswitch.o font.o task.o tinygl.o paddle.o game_object_display.o ball.o boing.o pacer.o boundaries.o player.o ir_uart.o usart1.o timer0.o IR_comms.o prescale.o error_check.o crazy_pong.o
	$(CC) $(CFLAGS) $^ -o $@ -lm
	$(SIZE) $@


# Target: clean project.
.PHONY: clean
clean: 
	-$(DEL) *.o *.out *.hex


# Target: program project.
.PHONY: program
program: game.out
	$(OBJCOPY) -O ihex game.out game.hex
	dfu-programmer atmega32u2 erase; dfu-programmer atmega32u2 flash game.hex; dfu-programmer atmega32u2 start


