Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o (exit)
/usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_copy_data.o)
                              test_lcd.o (__do_copy_data)
/usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a(itoa.o)
                              test_lcd.o (itoa)
/usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a(strrev.o)
                              /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a(itoa.o) (strrev)
/usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a(itoa.o) (__udivmodhi4)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o
LOAD test_lcd.o
LOAD lcd.o
LOAD /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libm.a
LOAD /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a
LOAD /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a
LOAD /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x3f0
 *(.vectors)
 .vectors       0x00000000       0x26 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x00000026       0x53 test_lcd.o
                0x0000007a                . = ALIGN (0x2)
 *fill*         0x00000079        0x1 00
                0x0000007a                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000007a        0x0 linker stubs
 *(.trampolines*)
                0x0000007a                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000007a                __ctors_start = .
 *(.ctors)
                0x0000007a                __ctors_end = .
                0x0000007a                __dtors_start = .
 *(.dtors)
                0x0000007a                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000007a        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o
                0x0000007a                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000007a        0xc /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000086       0x16 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_copy_data.o)
                0x00000086                __do_copy_data
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000009c        0x4 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o
 *(.init9)
 *(.text)
 .text          0x000000a0        0x2 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o
                0x000000a0                __vector_1
                0x000000a0                __vector_12
                0x000000a0                __bad_interrupt
                0x000000a0                __vector_6
                0x000000a0                __vector_3
                0x000000a0                __vector_11
                0x000000a0                __vector_13
                0x000000a0                __vector_17
                0x000000a0                __vector_7
                0x000000a0                __vector_5
                0x000000a0                __vector_4
                0x000000a0                __vector_9
                0x000000a0                __vector_2
                0x000000a0                __vector_15
                0x000000a0                __vector_8
                0x000000a0                __vector_14
                0x000000a0                __vector_10
                0x000000a0                __vector_16
                0x000000a0                __vector_18
 .text          0x000000a2       0xc2 test_lcd.o
                0x000000a2                wait_until_key_pressed
                0x000000b2                main
 .text          0x00000164      0x202 lcd.o
                0x0000021e                lcd_command
                0x0000022e                lcd_data
                0x0000023e                lcd_gotoxy
                0x0000025c                lcd_getxy
                0x00000262                lcd_clrscr
                0x00000268                lcd_home
                0x0000026e                lcd_putc
                0x000002cc                lcd_puts
                0x000002e2                lcd_puts_p
                0x000002fc                lcd_init
 .text          0x00000366        0x0 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_exit.o)
 .text          0x00000366        0x0 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_copy_data.o)
 .text          0x00000366        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a(itoa.o)
 .text          0x00000366        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a(strrev.o)
 .text          0x00000366        0x0 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_udivmodhi4.o)
                0x00000366                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000366        0x0 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_exit.o)
 .text.libgcc   0x00000366        0x0 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_copy_data.o)
 .text.avr-libc
                0x00000366       0x3e /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a(itoa.o)
                0x00000366                itoa
 .text.avr-libc
                0x000003a4       0x20 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a(strrev.o)
                0x000003a4                strrev
 .text.libgcc   0x000003c4       0x28 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_udivmodhi4.o)
                0x000003c4                __udivmodhi4
                0x000003ec                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000003ec        0x0 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_exit.o)
                0x000003ec                exit
                0x000003ec                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000003ec        0x4 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_exit.o)
 *(.fini0)
                0x000003f0                _etext = .

.data           0x00800060       0x2a load address 0x000003f0
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o
 .data          0x00800060       0x2a test_lcd.o
 .data          0x0080008a        0x0 lcd.o
 .data          0x0080008a        0x0 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_exit.o)
 .data          0x0080008a        0x0 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_copy_data.o)
 .data          0x0080008a        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a(itoa.o)
 .data          0x0080008a        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a(strrev.o)
 .data          0x0080008a        0x0 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0080008a                . = ALIGN (0x2)
                0x0080008a                _edata = .
                0x0080008a                PROVIDE (__data_end, .)

.bss            0x0080008a        0x0
                0x0080008a                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080008a        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o
 .bss           0x0080008a        0x0 test_lcd.o
 .bss           0x0080008a        0x0 lcd.o
 .bss           0x0080008a        0x0 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_exit.o)
 .bss           0x0080008a        0x0 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_copy_data.o)
 .bss           0x0080008a        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a(itoa.o)
 .bss           0x0080008a        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a(strrev.o)
 .bss           0x0080008a        0x0 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_udivmodhi4.o)
 *(.bss*)
 *(COMMON)
                0x0080008a                PROVIDE (__bss_end, .)
                0x000003f0                __data_load_start = LOADADDR (.data)
                0x0000041a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080008a        0x0
                0x0080008a                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080008a                PROVIDE (__noinit_end, .)
                0x0080008a                _end = .
                0x0080008a                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x93c
 *(.stab)
 .stab          0x00000000      0x6b4 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o
 .stab          0x000006b4      0x1b0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a(itoa.o)
                                0x1bc (size before relaxing)
 .stab          0x00000864       0xd8 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a(strrev.o)
                                 0xe4 (size before relaxing)

.stabstr        0x00000000       0xb4
 *(.stabstr)
 .stabstr       0x00000000       0xb4 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x40
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 test_lcd.o
 .debug_aranges
                0x00000020       0x20 lcd.o

.debug_pubnames
                0x00000000       0xd4
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x36 test_lcd.o
 .debug_pubnames
                0x00000036       0x9e lcd.o

.debug_info     0x00000000      0x606
 *(.debug_info)
 .debug_info    0x00000000      0x1a4 test_lcd.o
 .debug_info    0x000001a4      0x462 lcd.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x310
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0xdb test_lcd.o
 .debug_abbrev  0x000000db      0x235 lcd.o

.debug_line     0x00000000      0x71a
 *(.debug_line)
 .debug_line    0x00000000      0x1be test_lcd.o
 .debug_line    0x000001be      0x55c lcd.o

.debug_frame    0x00000000      0x110
 *(.debug_frame)
 .debug_frame   0x00000000       0x30 test_lcd.o
 .debug_frame   0x00000030       0xe0 lcd.o

.debug_str      0x00000000      0x1bf
 *(.debug_str)
 .debug_str     0x00000000       0xe2 test_lcd.o
                                0x11b (size before relaxing)
 .debug_str     0x000000e2       0xdd lcd.o
                                0x1bb (size before relaxing)

.debug_loc      0x00000000      0x346
 *(.debug_loc)
 .debug_loc     0x00000000       0x13 test_lcd.o
 .debug_loc     0x00000013      0x333 lcd.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(test_lcd.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o
__data_end                                        /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_copy_data.o)
__do_copy_data                                    /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_copy_data.o)
                                                  test_lcd.o
__heap_end                                        /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o
__init                                            /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o
__stack                                           /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o
__udivmodhi4                                      /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_udivmodhi4.o)
                                                  /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a(itoa.o)
__vector_1                                        /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o
__vector_10                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o
__vector_11                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o
__vector_12                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o
__vector_13                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o
__vector_14                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o
__vector_15                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o
__vector_16                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o
__vector_17                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o
__vector_18                                       /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o
__vector_2                                        /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o
__vector_3                                        /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o
__vector_4                                        /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o
__vector_5                                        /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o
__vector_6                                        /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o
__vector_7                                        /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o
__vector_8                                        /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o
__vector_9                                        /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o
__vector_default                                  /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o
__vectors                                         /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o
_exit                                             /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_exit.o)
exit                                              /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o
itoa                                              /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a(itoa.o)
                                                  test_lcd.o
lcd_clrscr                                        lcd.o
                                                  test_lcd.o
lcd_command                                       lcd.o
                                                  test_lcd.o
lcd_data                                          lcd.o
                                                  test_lcd.o
lcd_getxy                                         lcd.o
lcd_gotoxy                                        lcd.o
                                                  test_lcd.o
lcd_home                                          lcd.o
lcd_init                                          lcd.o
                                                  test_lcd.o
lcd_putc                                          lcd.o
                                                  test_lcd.o
lcd_puts                                          lcd.o
                                                  test_lcd.o
lcd_puts_p                                        lcd.o
                                                  test_lcd.o
main                                              test_lcd.o
                                                  /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn861.o
strrev                                            /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a(strrev.o)
                                                  /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a(itoa.o)
wait_until_key_pressed                            test_lcd.o
